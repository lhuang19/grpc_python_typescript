// @generated by protoc-gen-es v1.3.1
// @generated from file proto/test.proto (package generic, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message generic.TestRequest
 */
export declare class TestRequest extends Message<TestRequest> {
  /**
   * @generated from field: string input = 1;
   */
  input: string;

  constructor(data?: PartialMessage<TestRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "generic.TestRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequest;

  static equals(a: TestRequest | PlainMessage<TestRequest> | undefined, b: TestRequest | PlainMessage<TestRequest> | undefined): boolean;
}

/**
 * @generated from message generic.TestResponse
 */
export declare class TestResponse extends Message<TestResponse> {
  /**
   * @generated from field: string output = 1;
   */
  output: string;

  constructor(data?: PartialMessage<TestResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "generic.TestResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestResponse;

  static equals(a: TestResponse | PlainMessage<TestResponse> | undefined, b: TestResponse | PlainMessage<TestResponse> | undefined): boolean;
}

